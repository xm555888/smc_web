{"version":3,"sources":["../../../../../../../../src/client/components/react-dev-overlay/ui/components/errors/error-overlay-layout/error-overlay-layout.tsx"],"sourcesContent":["import type { DebugInfo } from '../../../../types'\nimport type { ErrorMessageType } from '../error-message/error-message'\nimport type { ErrorType } from '../error-type-label/error-type-label'\n\nimport { DialogContent, DialogFooter } from '../../dialog'\nimport {\n  ErrorOverlayToolbar,\n  styles as toolbarStyles,\n} from '../error-overlay-toolbar/error-overlay-toolbar'\nimport { ErrorOverlayFooter } from '../error-overlay-footer/error-overlay-footer'\nimport {\n  ErrorMessage,\n  styles as errorMessageStyles,\n} from '../error-message/error-message'\nimport {\n  ErrorTypeLabel,\n  styles as errorTypeLabelStyles,\n} from '../error-type-label/error-type-label'\nimport {\n  ErrorOverlayNav,\n  styles as floatingHeaderStyles,\n} from '../error-overlay-nav/error-overlay-nav'\n\nimport { ErrorOverlayDialog, DIALOG_STYLES } from '../dialog/dialog'\nimport {\n  ErrorOverlayDialogHeader,\n  DIALOG_HEADER_STYLES,\n} from '../dialog/header'\nimport { ErrorOverlayDialogBody, DIALOG_BODY_STYLES } from '../dialog/body'\nimport { CALL_STACK_STYLES } from '../call-stack/call-stack'\nimport { OVERLAY_STYLES, ErrorOverlayOverlay } from '../overlay/overlay'\nimport { ErrorOverlayBottomStack } from '../error-overlay-bottom-stack'\nimport type { ErrorBaseProps } from '../error-overlay/error-overlay'\nimport type { ReadyRuntimeError } from '../../../../utils/get-error-by-type'\nimport { EnvironmentNameLabel } from '../environment-name-label/environment-name-label'\n\ninterface ErrorOverlayLayoutProps extends ErrorBaseProps {\n  errorMessage: ErrorMessageType\n  errorType: ErrorType\n  children?: React.ReactNode\n  errorCode?: string\n  error: ReadyRuntimeError['error']\n  debugInfo?: DebugInfo\n  isBuildError?: boolean\n  onClose?: () => void\n  // TODO: better handle receiving\n  runtimeErrors?: ReadyRuntimeError[]\n  activeIdx?: number\n  setActiveIndex?: (index: number) => void\n  footerMessage?: string\n  dialogResizerRef?: React.RefObject<HTMLDivElement | null>\n}\n\nexport function ErrorOverlayLayout({\n  errorMessage,\n  errorType,\n  children,\n  errorCode,\n  error,\n  debugInfo,\n  isBuildError,\n  onClose,\n  versionInfo,\n  runtimeErrors,\n  activeIdx,\n  setActiveIndex,\n  footerMessage,\n  isTurbopack,\n  dialogResizerRef,\n  // This prop is used to animate the dialog, it comes from a parent component (<ErrorOverlay>)\n  // If it's not being passed, we should just render the component as it is being\n  // used without the context of a parent component that controls its state (e.g. Storybook).\n  rendered = true,\n  transitionDurationMs,\n}: ErrorOverlayLayoutProps) {\n  const animationProps = {\n    'data-rendered': rendered,\n    style: {\n      '--transition-duration': `${transitionDurationMs}ms`,\n    } as React.CSSProperties,\n  }\n\n  const hasFooter = Boolean(footerMessage || errorCode)\n\n  return (\n    <ErrorOverlayOverlay fixed={isBuildError} {...animationProps}>\n      <div data-nextjs-dialog-root {...animationProps}>\n        <ErrorOverlayDialog\n          onClose={onClose}\n          dialogResizerRef={dialogResizerRef}\n          data-has-footer={hasFooter}\n        >\n          <DialogContent>\n            <ErrorOverlayDialogHeader>\n              <div\n                className=\"nextjs__container_errors__error_title\"\n                // allow assertion in tests before error rating is implemented\n                data-nextjs-error-code={errorCode}\n              >\n                <span data-nextjs-error-label-group>\n                  <ErrorTypeLabel errorType={errorType} />\n                  {error.environmentName && (\n                    <EnvironmentNameLabel\n                      environmentName={error.environmentName}\n                    />\n                  )}\n                </span>\n                <ErrorOverlayToolbar error={error} debugInfo={debugInfo} />\n              </div>\n              <ErrorMessage errorMessage={errorMessage} />\n            </ErrorOverlayDialogHeader>\n\n            <ErrorOverlayDialogBody>{children}</ErrorOverlayDialogBody>\n          </DialogContent>\n          {hasFooter && (\n            <DialogFooter>\n              <ErrorOverlayFooter\n                footerMessage={footerMessage}\n                errorCode={errorCode}\n              />\n            </DialogFooter>\n          )}\n          <ErrorOverlayBottomStack\n            errorCount={runtimeErrors?.length ?? 0}\n            activeIdx={activeIdx ?? 0}\n          />\n        </ErrorOverlayDialog>\n        <ErrorOverlayNav\n          runtimeErrors={runtimeErrors}\n          activeIdx={activeIdx}\n          setActiveIndex={setActiveIndex}\n          versionInfo={versionInfo}\n          isTurbopack={isTurbopack}\n        />\n      </div>\n    </ErrorOverlayOverlay>\n  )\n}\n\nexport const styles = `\n  ${OVERLAY_STYLES}\n  ${DIALOG_STYLES}\n  ${DIALOG_HEADER_STYLES}\n  ${DIALOG_BODY_STYLES}\n\n  ${floatingHeaderStyles}\n  ${errorTypeLabelStyles}\n  ${errorMessageStyles}\n  ${toolbarStyles}\n  ${CALL_STACK_STYLES}\n\n  [data-nextjs-error-label-group] {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n`\n"],"names":["DialogContent","DialogFooter","ErrorOverlayToolbar","styles","toolbarStyles","ErrorOverlayFooter","ErrorMessage","errorMessageStyles","ErrorTypeLabel","errorTypeLabelStyles","ErrorOverlayNav","floatingHeaderStyles","ErrorOverlayDialog","DIALOG_STYLES","ErrorOverlayDialogHeader","DIALOG_HEADER_STYLES","ErrorOverlayDialogBody","DIALOG_BODY_STYLES","CALL_STACK_STYLES","OVERLAY_STYLES","ErrorOverlayOverlay","ErrorOverlayBottomStack","EnvironmentNameLabel","ErrorOverlayLayout","errorMessage","errorType","children","errorCode","error","debugInfo","isBuildError","onClose","versionInfo","runtimeErrors","activeIdx","setActiveIndex","footerMessage","isTurbopack","dialogResizerRef","rendered","transitionDurationMs","animationProps","style","hasFooter","Boolean","fixed","div","data-nextjs-dialog-root","data-has-footer","className","data-nextjs-error-code","span","data-nextjs-error-label-group","environmentName","errorCount","length"],"mappings":";AAIA,SAASA,aAAa,EAAEC,YAAY,QAAQ,eAAc;AAC1D,SACEC,mBAAmB,EACnBC,UAAUC,aAAa,QAClB,iDAAgD;AACvD,SAASC,kBAAkB,QAAQ,+CAA8C;AACjF,SACEC,YAAY,EACZH,UAAUI,kBAAkB,QACvB,iCAAgC;AACvC,SACEC,cAAc,EACdL,UAAUM,oBAAoB,QACzB,uCAAsC;AAC7C,SACEC,eAAe,EACfP,UAAUQ,oBAAoB,QACzB,yCAAwC;AAE/C,SAASC,kBAAkB,EAAEC,aAAa,QAAQ,mBAAkB;AACpE,SACEC,wBAAwB,EACxBC,oBAAoB,QACf,mBAAkB;AACzB,SAASC,sBAAsB,EAAEC,kBAAkB,QAAQ,iBAAgB;AAC3E,SAASC,iBAAiB,QAAQ,2BAA0B;AAC5D,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,qBAAoB;AACxE,SAASC,uBAAuB,QAAQ,gCAA+B;AAGvE,SAASC,oBAAoB,QAAQ,mDAAkD;AAmBvF,OAAO,SAASC,mBAAmB,KAqBT;IArBS,IAAA,EACjCC,YAAY,EACZC,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,KAAK,EACLC,SAAS,EACTC,YAAY,EACZC,OAAO,EACPC,WAAW,EACXC,aAAa,EACbC,SAAS,EACTC,cAAc,EACdC,aAAa,EACbC,WAAW,EACXC,gBAAgB,EAChB,6FAA6F;IAC7F,+EAA+E;IAC/E,2FAA2F;IAC3FC,WAAW,IAAI,EACfC,oBAAoB,EACI,GArBS;IAsBjC,MAAMC,iBAAiB;QACrB,iBAAiBF;QACjBG,OAAO;YACL,yBAAyB,AAAC,KAAEF,uBAAqB;QACnD;IACF;IAEA,MAAMG,YAAYC,QAAQR,iBAAiBT;QAyCrBM;IAvCtB,qBACE,KAACb;QAAoByB,OAAOf;QAAe,GAAGW,cAAc;kBAC1D,cAAA,MAACK;YAAIC,yBAAuB;YAAE,GAAGN,cAAc;;8BAC7C,MAAC7B;oBACCmB,SAASA;oBACTO,kBAAkBA;oBAClBU,mBAAiBL;;sCAEjB,MAAC3C;;8CACC,MAACc;;sDACC,MAACgC;4CACCG,WAAU;4CACV,8DAA8D;4CAC9DC,0BAAwBvB;;8DAExB,MAACwB;oDAAKC,+BAA6B;;sEACjC,KAAC5C;4DAAeiB,WAAWA;;wDAC1BG,MAAMyB,eAAe,kBACpB,KAAC/B;4DACC+B,iBAAiBzB,MAAMyB,eAAe;;;;8DAI5C,KAACnD;oDAAoB0B,OAAOA;oDAAOC,WAAWA;;;;sDAEhD,KAACvB;4CAAakB,cAAcA;;;;8CAG9B,KAACR;8CAAwBU;;;;wBAE1BiB,2BACC,KAAC1C;sCACC,cAAA,KAACI;gCACC+B,eAAeA;gCACfT,WAAWA;;;sCAIjB,KAACN;4BACCiC,YAAYrB,CAAAA,wBAAAA,iCAAAA,cAAesB,MAAM,YAArBtB,wBAAyB;4BACrCC,WAAWA,oBAAAA,YAAa;;;;8BAG5B,KAACxB;oBACCuB,eAAeA;oBACfC,WAAWA;oBACXC,gBAAgBA;oBAChBH,aAAaA;oBACbK,aAAaA;;;;;AAKvB;AAEA,OAAO,MAAMlC,SAAS,AAAC,SACnBgB,iBAAe,SACfN,gBAAc,SACdE,uBAAqB,SACrBE,qBAAmB,WAEnBN,uBAAqB,SACrBF,uBAAqB,SACrBF,qBAAmB,SACnBH,gBAAc,SACdc,oBAAkB,8GAOrB"}